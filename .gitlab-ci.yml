stages:
  # - test
  - build
  - deploy

# lint-test-job:
#   image: python:3-bullseye
#   stage: test
#   script:
#     - pip install flake8
#     - flake8 nd

# api-unit-test-job:
#   image: python:3-bullseye
#   stage: test
#   needs:
#     - lint-test-job
#   script:
#     - cd nd
#     - pip install -r requirements.txt
#     - python -m pytest
#   variables:
#     DATABASE_URL: ""
#     SIGNING_KEY: lynnoliviafloyd

build-front-end-job:
  stage: build
  image: node:lts-bullseye
  # needs:
  #   - lint-test-job
  variables:
    PUBLIC_URL: https://narrativeninjas.gitlab.io/module3-project-gamma
    REACT_APP_ND_API_HOST: https://nd.nov-pt-1.mod3projects.com
  script:
    - cd ghi
    - npm install
    - npm run build
    - cp build/index.html build/404.html
  artifacts:
    paths:
      - ghi/build/

pages:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  dependencies:
    - build-front-end-job
  needs:
    - build-front-end-job
  script:
    - mv ghi/build/ public
  artifacts:
    paths:
      - public

build-nd:
  image: docker:19.03.1
  stage: build
  services:
    - docker:19.03.1-dind
  before_script:
    - export DOCKER_REGISTRY_USER=$CI_REGISTRY_USER
    - export DOCKER_REGISTRY_PASSWORD=$CI_REGISTRY_PASSWORD
    - export DOCKER_REGISTRY_URL=$CI_REGISTRY
    - export COMMIT_HASH=$CI_COMMIT_SHA
    - export IMAGE_NAME_WITH_REGISTRY_PREFIX=$CI_REGISTRY_IMAGE
    - docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD" $DOCKER_REGISTRY_URL
  script:
    - cd nd
    - echo "Building..."
    - export CONTAINER_FULL_IMAGE_NAME_WITH_TAG=$IMAGE_NAME_WITH_REGISTRY_PREFIX/nd:$COMMIT_HASH
    - echo "CONTAINER_FULL_IMAGE_NAME_WITH_TAG=$IMAGE_NAME_WITH_REGISTRY_PREFIX/nd:$COMMIT_HASH"
    - docker build -f ./Dockerfile --pull -t nd .
    - echo "docker build -f ./Dockerfile --pull -t nd ."
    - docker tag nd "$CONTAINER_FULL_IMAGE_NAME_WITH_TAG"
    - echo "docker tag nd "$CONTAINER_FULL_IMAGE_NAME_WITH_TAG""
    - docker push "$CONTAINER_FULL_IMAGE_NAME_WITH_TAG"
    - echo $CONTAINER_FULL_IMAGE_NAME_WITH_TAG
    - echo "Deploying on CapRover..."
    - docker run caprover/cli-caprover:v2.1.1 caprover deploy --caproverUrl $CAPROVER_URL --caproverPassword $CAPROVER_PASSWORD --caproverApp $CAPROVER_APP --imageName $CONTAINER_FULL_IMAGE_NAME_WITH_TAG
  only:
    - main


    
